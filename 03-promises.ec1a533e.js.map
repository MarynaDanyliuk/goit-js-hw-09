{"mappings":"YAAA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAe,QAC9BC,OAAQF,SAASC,cAAe,yBAChCE,WAAYH,SAASC,cAAe,uBACpCG,UAAWJ,SAASC,cAAe,sBACnCI,YAAaL,SAASC,cAAe,yBAGvCK,QAAQC,IAAIT,EAAKC,MACjBO,QAAQC,IAAIT,EAAKI,QACjBI,QAAQC,IAAIT,EAAKK,YACjBG,QAAQC,IAAIT,EAAKM,WACjBE,QAAQC,IAAIT,EAAKO,aAEjBP,EAAKI,OAAOM,iBAAkB,SAASC,GAEvC,IAAMC,EAAQZ,EAAKK,WAAWQ,MACxBC,EAAOd,EAAKM,UAAUO,MAG5B,SAASF,EAAcI,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACTC,aAAY,WACNJ,EACFK,QAAQ,6CAERC,OAAO,yC,GAERT,E,GACFE,E,CAELQ,QAAQC,MAEN,SAAAC,GACElB,QAAQC,IAAI,wCACZD,QAAQC,IAAIiB,E,IAGd,SAAAC,GACEnB,QAAQC,IAAI,uCACZD,QAAQC,IAAIkB,E,IAOhBnB,QAAQC,IAAIE,EA9BK,EA8BmBC,G","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector(`form`),\n  button: document.querySelector(`button[type=\"submit\"]`),\n  inputDelay: document.querySelector(`input[name=\"delay\"]`),\n  inputStep: document.querySelector(`input[name=\"step\"]`),\n  inputAmount: document.querySelector(`input[name=\"amount\"]`),\n};\n\nconsole.log(refs.form);\nconsole.log(refs.button);\nconsole.log(refs.inputDelay);\nconsole.log(refs.inputStep);\nconsole.log(refs.inputAmount);\n\nrefs.button.addEventListener(`submit`, createPromise);\n\nconst delay = refs.inputDelay.value;\nconst step = refs.inputStep.value;\nconst position = 5;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve('Success! Value passed to resolve function');\n      } else {\n        reject('Error! Error passed to reject function');\n      }\n    }, step);\n  }, delay);\n}\npromise.then(\n  // onResolve will run third or not at all\n  result => {\n    console.log('onResolve call inside promise.then()');\n    console.log(result); // \"Success! Value passed to resolve function\"\n  },\n  // onReject will run third or not at all\n  error => {\n    console.log('onReject call inside promise.then()');\n    console.log(error); // \"Error! Error passed to reject function\"\n  }\n);\n// Promise.then(result => {\n//   console.log(result);\n// });\n\nconsole.log(createPromise(position, delay));\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","button","inputDelay","inputStep","inputAmount","console","log","addEventListener","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$delay","value","$ce04d3a99e08e73b$var$step","position","delay1","shouldResolve","Math","random","setTimeout","setInterval","resolve","reject","promise","then","result","error"],"version":3,"file":"03-promises.ec1a533e.js.map"}